{"version":3,"sources":["../../../src/api/model/model.controller.js"],"names":["train","predict","log","data","require","__dirname","req","res","next","callback","err","stdout","stderr","Error","send","message","params","day","result","JSON","parse","accuracy","prediction"],"mappings":";;;;;QAOgBA,K,GAAAA,K;QAiBAC,O,GAAAA,O;;AAvBhB;;;;AACA;;;;AACA;;;;AACA,IAAMC,MAAM,qBAAM,kBAAN,CAAZ,C,CAJA;;AAKA,IAAMC,OAAOC,QAAQC,YAAY,mBAApB,CAAb;;AAEO,SAASL,KAAT,CAAeM,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACpCN,MAAI,QAAJ;;AAEA,2BAAK,YAAYG,SAAZ,GAAwB,WAA7B,EAA0C,SAASI,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AAC/E,QAAIF,GAAJ,EAAS;AACP,YAAM,IAAIG,KAAJ,CAAUH,GAAV,CAAN;AACD;;AAEDR,QAAIS,MAAJ;AACAT,QAAIU,MAAJ;;AAEAL,QAAIO,IAAJ,CAAS;AACPC,eAAS;AADF,KAAT;AAGD,GAXD;AAYD;;AAEM,SAASd,OAAT,CAAiBK,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACtCN,MAAI,UAAJ;;AAEA,wCAAgBG,SAAhB,oBAAwCC,IAAIU,MAAJ,CAAWC,GAAnD,EAA0D,SAASR,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AAC/F,QAAIF,GAAJ,EAAS;AACP,YAAM,IAAIG,KAAJ,CAAUH,GAAV,CAAN;AACD;;AAED,QAAMQ,SAASC,KAAKC,KAAL,CAAWT,MAAX,CAAf;;AAEAJ,QAAIO,IAAJ,CAAS;AACPC,eAAS,yBADF;AAEPM,gBAAUH,OAAO,CAAP,CAFH;AAGPI,kBAAYJ,OAAO,CAAP;AAHL,KAAT;AAKD,GAZD;AAaD","file":"model.controller.js","sourcesContent":["/* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"next\" }] */\nimport debug from 'debug';\nimport request from 'request';\nimport { exec } from 'child_process';\nconst log = debug('model.controller');\nconst data = require(__dirname + '/../../data/dummy');\n\nexport function train(req, res, next) {\n  log('Train!');\n\n  exec('python ' + __dirname + '/model.py', function callback(err, stdout, stderr) {\n    if (err) {\n      throw new Error(err);\n    }\n\n    log(stdout);\n    log(stderr);\n\n    res.send({\n      message: 'Successfully trained!'\n    });\n  });\n}\n\nexport function predict(req, res, next) {\n  log('Predict!');\n\n  exec(`python \"${__dirname}\\\\model.py\" ${req.params.day}`, function callback(err, stdout, stderr) {\n    if (err) {\n      throw new Error(err);\n    }\n\n    const result = JSON.parse(stdout);\n\n    res.send({\n      message: 'Successfully predicted!',\n      accuracy: result[0],\n      prediction: result[1]\n    });\n  });\n}\n"]}